/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package IFace;

import bean.Medecin;
import bean.Patient;
import bean.Visite;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import manager.MedecinManager;
import manager.PatientManager;
import manager.VisiteManager;

/**
 *
 * @author learning
 */
public class IFacePatient extends javax.swing.JFrame {

    String indexCodeMedecin;
    String indexCodePatient;
    //int indexCodeVisite;
    /**
     * Creates new form IFacePatient
     */
    public IFacePatient() {
        initComponents();
        tableauMedecin();
        tableauPatient();
        tableauVisite();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        PanelMedecin = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        labelGradeMedecin = new javax.swing.JLabel();
        labelPrenomMedecin = new javax.swing.JLabel();
        labelNomMedecin = new javax.swing.JLabel();
        labelCodeMedecin = new javax.swing.JLabel();
        ChampCodeMedecin = new javax.swing.JTextField();
        ChampNomMedecin = new javax.swing.JTextField();
        ChampPrenomMedecin = new javax.swing.JTextField();
        btnAjoutMedecin = new javax.swing.JButton();
        btnModifieMedecin = new javax.swing.JButton();
        btnSupprimeMedecin = new javax.swing.JButton();
        ChampGradeMedecin = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableauMedecin = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        PanelPatient = new javax.swing.JPanel();
        labelCodePatient = new javax.swing.JLabel();
        labelNomPatient = new javax.swing.JLabel();
        labelPrenomPatient = new javax.swing.JLabel();
        labelSexePatient = new javax.swing.JLabel();
        labelAdressePatient = new javax.swing.JLabel();
        ChampCodePatient = new javax.swing.JTextField();
        ChampAdressePatient = new javax.swing.JTextField();
        ChampPrenomPatient = new javax.swing.JTextField();
        ChampNomPatient = new javax.swing.JTextField();
        btnAjoutPatient = new javax.swing.JButton();
        btnModifiePatient = new javax.swing.JButton();
        btnSupprimePatient = new javax.swing.JButton();
        ListeSexePatient = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableauPatient = new javax.swing.JTable();
        ChampRecherchePatient = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        PanelVisite = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        labelCodeMedVisite = new javax.swing.JLabel();
        labelCodePatVisite = new javax.swing.JLabel();
        labelDateDeVisite = new javax.swing.JLabel();
        ChampCodeMedVisite = new javax.swing.JTextField();
        ChampCodePatVisite = new javax.swing.JTextField();
        btnAjoutVisite = new javax.swing.JButton();
        btnModifieVisite = new javax.swing.JButton();
        btnSupprimeVisite = new javax.swing.JButton();
        ChampDateVisite = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableauVisite = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labelGradeMedecin.setText("Grade :");

        labelPrenomMedecin.setText("Pr√©nom :");

        labelNomMedecin.setText("Nom :");

        labelCodeMedecin.setText("Code Medecin :");

        btnAjoutMedecin.setText("Ajouter");
        btnAjoutMedecin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjoutMedecinActionPerformed(evt);
            }
        });

        btnModifieMedecin.setText("Modifier");
        btnModifieMedecin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifieMedecinActionPerformed(evt);
            }
        });

        btnSupprimeMedecin.setText("Supprimer");
        btnSupprimeMedecin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimeMedecinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelCodeMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNomMedecin)
                            .addComponent(labelPrenomMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(labelGradeMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ChampNomMedecin)
                            .addComponent(ChampPrenomMedecin)
                            .addComponent(ChampGradeMedecin, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(ChampCodeMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(btnModifieMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(btnSupprimeMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAjoutMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCodeMedecin)
                    .addComponent(ChampCodeMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNomMedecin)
                    .addComponent(ChampNomMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPrenomMedecin)
                    .addComponent(ChampPrenomMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelGradeMedecin)
                    .addComponent(ChampGradeMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(btnAjoutMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModifieMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSupprimeMedecin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85))
        );

        TableauMedecin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Code ", "Nom", "Pr√©nom", "Grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableauMedecin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TableauMedecinMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(TableauMedecin);

        javax.swing.GroupLayout PanelMedecinLayout = new javax.swing.GroupLayout(PanelMedecin);
        PanelMedecin.setLayout(PanelMedecinLayout);
        PanelMedecinLayout.setHorizontalGroup(
            PanelMedecinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMedecinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelMedecinLayout.setVerticalGroup(
            PanelMedecinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMedecinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelMedecinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelMedecinLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Medecin", PanelMedecin);

        PanelPatient.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labelCodePatient.setText("Code Patient :");

        labelNomPatient.setText("Nom :");

        labelPrenomPatient.setText("Pr√©nom :");

        labelSexePatient.setText("Sexe :");

        labelAdressePatient.setText("Adresse :");

        btnAjoutPatient.setText("Ajouter");
        btnAjoutPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjoutPatientActionPerformed(evt);
            }
        });

        btnModifiePatient.setText("Modifier");
        btnModifiePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifiePatientActionPerformed(evt);
            }
        });

        btnSupprimePatient.setText("Supprimer");
        btnSupprimePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimePatientActionPerformed(evt);
            }
        });

        ListeSexePatient.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculin", "Feminin" }));

        javax.swing.GroupLayout PanelPatientLayout = new javax.swing.GroupLayout(PanelPatient);
        PanelPatient.setLayout(PanelPatientLayout);
        PanelPatientLayout.setHorizontalGroup(
            PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelPatientLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAjoutPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
            .addGroup(PanelPatientLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCodePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNomPatient)
                    .addComponent(labelSexePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(labelPrenomPatient, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelAdressePatient, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                    .addComponent(btnModifiePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ListeSexePatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ChampAdressePatient, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                        .addComponent(ChampPrenomPatient)
                        .addComponent(ChampNomPatient)
                        .addComponent(btnSupprimePatient, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ChampCodePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        PanelPatientLayout.setVerticalGroup(
            PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPatientLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChampCodePatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCodePatient))
                .addGap(18, 18, 18)
                .addGroup(PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChampNomPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNomPatient))
                .addGap(18, 18, 18)
                .addGroup(PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChampPrenomPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPrenomPatient))
                .addGap(21, 21, 21)
                .addGroup(PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSexePatient)
                    .addComponent(ListeSexePatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChampAdressePatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAdressePatient))
                .addGap(31, 31, 31)
                .addComponent(btnAjoutPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModifiePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSupprimePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        TableauPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Code ", "Nom", "Pr√©nom", "Sexe", "Adresse"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableauPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TableauPatientMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(TableauPatient);

        ChampRecherchePatient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ChampRecherchePatientKeyReleased(evt);
            }
        });

        jLabel1.setText("Rechercher");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChampRecherchePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelPatient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChampRecherchePatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Patient", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        labelCodeMedVisite.setText("Code M√©decin :");

        labelCodePatVisite.setText("Code Patient :");

        labelDateDeVisite.setText("Date de visite :");

        btnAjoutVisite.setText("Ajouter");
        btnAjoutVisite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjoutVisiteActionPerformed(evt);
            }
        });

        btnModifieVisite.setText("Modifier");
        btnModifieVisite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifieVisiteActionPerformed(evt);
            }
        });

        btnSupprimeVisite.setText("Supprimer");
        btnSupprimeVisite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimeVisiteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDateDeVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCodePatVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelCodeMedVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChampCodeMedVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChampCodePatVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChampDateVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAjoutVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModifieVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSupprimeVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCodeMedVisite)
                    .addComponent(ChampCodeMedVisite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCodePatVisite)
                    .addComponent(ChampCodePatVisite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelDateDeVisite)
                    .addComponent(ChampDateVisite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(btnAjoutVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnModifieVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnSupprimeVisite, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TableauVisite.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Code M√©decin", "Code Patient", "Date de visite"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableauVisite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TableauVisiteMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(TableauVisite);

        javax.swing.GroupLayout PanelVisiteLayout = new javax.swing.GroupLayout(PanelVisite);
        PanelVisite.setLayout(PanelVisiteLayout);
        PanelVisiteLayout.setHorizontalGroup(
            PanelVisiteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelVisiteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addContainerGap())
        );
        PanelVisiteLayout.setVerticalGroup(
            PanelVisiteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelVisiteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelVisiteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelVisiteLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Visite", PanelVisite);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**********************fonction ajouter m√©decin***********************/
    private void btnAjoutMedecinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjoutMedecinActionPerformed
        // TODO add your handling code here:
        if (!ChampCodeMedecin.getText().equals("") && !ChampNomMedecin.getText().equals("") && !ChampPrenomMedecin.getText().equals("") && !ChampGradeMedecin.getText().equals("")) {
            String codeMed = ChampCodeMedecin.getText();
            String nomMed = ChampNomMedecin.getText();
            String prenomMed = ChampPrenomMedecin.getText();
            String gradeMed = ChampGradeMedecin.getText();

            Medecin medecin = new Medecin();
            medecin.setCodeMed(codeMed);
            medecin.setNom(nomMed);
            medecin.setPrenom(prenomMed);
            medecin.setGrade(gradeMed);

            MedecinManager medecinManager = new MedecinManager();
            medecinManager.ajoutMedecin(medecin);
            JOptionPane.showMessageDialog(null, "Insertion r√©ussit !");
            tableauMedecin();
        } else {
            JOptionPane.showMessageDialog(null, "Veuillez remplir les champs");
        }
    }//GEN-LAST:event_btnAjoutMedecinActionPerformed
    
    /**********************fonction supprimer m√©decin***********************/
    private void btnSupprimeMedecinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimeMedecinActionPerformed
        // TODO add your handling code here:
        int selectedRow = TableauMedecin.getSelectedRow();
        
        if (selectedRow == -1) {
            // Aucune ligne n'a √©t√© s√©lectionn√©e
            return;
        }
        DefaultTableModel model = (DefaultTableModel) TableauMedecin.getModel();
        try {
            
            String codeMed = (String) model.getValueAt(selectedRow, 0);
            MedecinManager medecinManager = new MedecinManager();
            medecinManager.supprimeMedecin(codeMed);
            JOptionPane.showMessageDialog(null, "Suppression r√©ussie");
            tableauMedecin();
     
        } catch (Exception e) {
            System.err.println("erreur de suppression");
        }
    }//GEN-LAST:event_btnSupprimeMedecinActionPerformed

    /**********************fonction modifier m√©decin***********************/
    private void btnModifieMedecinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifieMedecinActionPerformed
        // TODO add your handling code here:
        int selectedRow = TableauMedecin.getSelectedRow();
        if(selectedRow == -1 ) {
            return;
        }
        DefaultTableModel model = (DefaultTableModel) TableauMedecin.getModel();
            try {
                String codeMedecin = (String) model.getValueAt(selectedRow, 0);
                codeMedecin = ChampCodeMedecin.getText();
                String nomMedecin = ChampNomMedecin.getText();
                String prenomMedecin = ChampPrenomMedecin.getText();
                String gradeMedecin = ChampGradeMedecin.getText();
                
                Medecin medecin = new Medecin();
                medecin.setCodeMed(codeMedecin);
                medecin.setNom(nomMedecin);
                medecin.setPrenom(prenomMedecin);
                medecin.setGrade(gradeMedecin);
                
                MedecinManager medecinManager = new MedecinManager();
                medecinManager.modifieMedecin(medecin);
                JOptionPane.showMessageDialog(null, "Modification r√©ussi");
                tableauMedecin();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_btnModifieMedecinActionPerformed

    /**********************S√©l√©ctionner tableau m√©decin***********************/
    private void TableauMedecinMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableauMedecinMouseReleased
        // TODO add your handling code here:
        int i = TableauMedecin.getSelectedRow();
        
        DefaultTableModel model = (DefaultTableModel) TableauMedecin.getModel();
        indexCodeMedecin = (String) model.getValueAt(i, 0);
        ChampCodeMedecin.setText((String) model.getValueAt(i, 0));
        ChampNomMedecin.setText((String) model.getValueAt(i, 1));
        ChampPrenomMedecin.setText((String) model.getValueAt(i, 2));
        ChampGradeMedecin.setText((String) model.getValueAt(i, 3));
    }//GEN-LAST:event_TableauMedecinMouseReleased

    /**********************fonction ajouter patient***********************/
    private void btnAjoutPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjoutPatientActionPerformed
        // TODO add your handling code here:
        if (!ChampCodePatient.getText().equals("") && !ChampNomPatient.getText().equals("") && !ChampPrenomPatient.getText().equals("") && !ChampAdressePatient.getText().equals("")) {
            String codePatient = ChampCodePatient.getText();
            String nomPatient = ChampNomPatient.getText();
            String prenomPatient = ChampPrenomPatient.getText();
            String sexePatient = (String) ListeSexePatient.getSelectedItem();
            String adressePatient = ChampAdressePatient.getText();

            Patient patient = new Patient();
            patient.setCodePat(codePatient);
            patient.setNomPat(nomPatient);
            patient.setPrenomPat(prenomPatient);
            patient.setSexe(sexePatient);
            patient.setAdresse(adressePatient);

            PatientManager patientManager = new PatientManager();
            patientManager.ajoutPatient(patient);
            JOptionPane.showMessageDialog(null, "Insertion r√©ussit ");
            tableauPatient();
        } else {
            JOptionPane.showMessageDialog(null, "Veuillez remplir les champs");
        }

    }//GEN-LAST:event_btnAjoutPatientActionPerformed

    /**********************fonction supprimer patient***********************/
    private void btnSupprimePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimePatientActionPerformed
        // TODO add your handling code here:
      int selectedRow = TableauPatient.getSelectedRow();
      if(selectedRow == -1) {
          return;
      }
      DefaultTableModel model = (DefaultTableModel) TableauPatient.getModel();
        try {
            String codePat = (String) model.getValueAt(selectedRow, 0);
            PatientManager patientManager = new PatientManager();
            patientManager.supprimePatient(codePat);
            JOptionPane.showMessageDialog(null, "Suppression r√©ussit");
            tableauPatient();
        } catch (Exception e) {
            System.err.println("err");
        }
    }//GEN-LAST:event_btnSupprimePatientActionPerformed

    /**********************fonction modifier patient***********************/
    private void btnModifiePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifiePatientActionPerformed
        // TODO add your handling code here:
        int selectedRow = TableauPatient.getSelectedRow();
        if(selectedRow == -1) {
            return;
        }
        DefaultTableModel model = (DefaultTableModel) TableauPatient.getModel();
            try {
                String codePatient = (String) model.getValueAt(selectedRow, 0);
                String code = ChampCodePatient.getText();
                String nomPatient = ChampNomPatient.getText();
                String prenomPatient = ChampPrenomPatient.getText();
                String sexePatient = (String) ListeSexePatient.getSelectedItem();
                String AdressePatient = ChampAdressePatient.getText();
                
                Patient patient = new Patient();
                patient.setCodePat(codePatient);
                patient.setNomPat(nomPatient);
                patient.setPrenomPat(prenomPatient);
                patient.setSexe(sexePatient);
                patient.setAdresse(AdressePatient);
                
                PatientManager patientManager= new PatientManager();
                patientManager.modifiePatient(patient);
                JOptionPane.showMessageDialog(null, "Modification r√©ussit");
                tableauPatient();
            } catch (Exception e) {
                //System.err.println("erreur de modification");
                JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_btnModifiePatientActionPerformed

    /**********************S√©l√©ctionner tableau m√©decin***********************/
    private void TableauPatientMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableauPatientMouseReleased
        // TODO add your handling code here:
        int i = TableauPatient.getSelectedRow();
        
        DefaultTableModel model = (DefaultTableModel) TableauPatient.getModel();

        ChampCodePatient.setText((String) model.getValueAt(i, 0));
        ChampNomPatient.setText((String) model.getValueAt(i, 1));
        ChampPrenomPatient.setText((String) model.getValueAt(i, 2));
        ListeSexePatient.setSelectedItem((String) model.getValueAt(i, 3));
        ChampAdressePatient.setText((String) model.getValueAt(i, 4));
    }//GEN-LAST:event_TableauPatientMouseReleased

    /**********************Recherche dans le tableau patient***********************/
    private void ChampRecherchePatientKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ChampRecherchePatientKeyReleased
        // TODO add your handling code here:
        PatientManager patientManager = new PatientManager();
        Patient pat = new Patient();
        pat.setCodePat(ChampRecherchePatient.getText());
        pat.setNomPat(ChampRecherchePatient.getText());
        //String recherche = ChampRecherchePatient.getText();
        
        Patient patient = patientManager.recherchePatient(pat);
        
        DefaultTableModel model = (DefaultTableModel) TableauPatient.getModel();
        model.setRowCount(0);
        if(patient != null) {
            Object[] rowData = {
                patient.getCodePat(),
                patient.getNomPat(),
                patient.getPrenomPat(),
                patient.getSexe(),
                patient.getAdresse()
            };
            model.addRow(rowData);
        } else {
            System.out.println("Patient non trouv√©.");
            tableauPatient();
        }
    }//GEN-LAST:event_ChampRecherchePatientKeyReleased

    /**********************S√©l√©ctionner tableau visite***********************/
    private void TableauVisiteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableauVisiteMouseReleased
        // TODO add your handling code here:
    int i = TableauVisite.getSelectedRow();
    DefaultTableModel model = (DefaultTableModel) TableauVisite.getModel();

    ChampCodeMedVisite.setText((String) model.getValueAt(i, 0));
    ChampCodePatVisite.setText((String) model.getValueAt(i, 1));

    Date date = (Date) model.getValueAt(i, 2);
    //SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
    //String dateString = dateFormat.format(date);
    ChampDateVisite.setDate(date);
    }//GEN-LAST:event_TableauVisiteMouseReleased

    /**********************fonction ajouter visite***********************/
    private void btnAjoutVisiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjoutVisiteActionPerformed
        // TODO add your handling code here:
        if(!ChampCodeMedVisite.getText().equals("") && !ChampCodePatVisite.getText().equals("") && ChampDateVisite.getDate().equals("")) {            
            String codeMedVisite = ChampCodeMedVisite.getText();
            String codePatVisite = ChampCodePatVisite.getText();
            Date dateVisite = ChampDateVisite.getDate();

            Visite visite = new Visite();
            visite.setCodeMedVisite(codeMedVisite);
            visite.setCodePatVisite(codePatVisite);
            visite.setDateVisite(dateVisite);

            VisiteManager visiteManager = new VisiteManager();
            visiteManager.ajoutVisite(visite);
            JOptionPane.showMessageDialog(null, "Ajout r√©ussi");
            tableauVisite();
        } else {
            JOptionPane.showMessageDialog(null, "Veuillez remplir les champs");
        }
    }//GEN-LAST:event_btnAjoutVisiteActionPerformed

    /**********************fonction modifier visite***********************/
    private void btnModifieVisiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifieVisiteActionPerformed
        // TODO add your handling code here:
        int selectedRow = TableauVisite.getSelectedRow();
        if(selectedRow == -1) {
            return;
        }
        DefaultTableModel model = (DefaultTableModel) TableauVisite.getModel();
        try {
            String codeMedVisite = (String) model.getValueAt(selectedRow, 0);
            String codePatVisite = (String) model.getValueAt(selectedRow, 1);
            
                   // R√©cup√©rer la date du champ JDateChooser
            java.util.Date utilDate = ChampDateVisite.getDate();
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            
            Visite visite = new Visite();
            visite.setCodeMedVisite(codeMedVisite);
            visite.setCodePatVisite(codePatVisite);
            visite.setDateVisite(sqlDate);
            
            VisiteManager visiteManager = new VisiteManager();
            visiteManager.modifieVisite(visite);
            JOptionPane.showMessageDialog(null, "Modification r√©ussist");
            tableauVisite();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnModifieVisiteActionPerformed

    /**********************fonction supprimer visite***********************/
    private void btnSupprimeVisiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimeVisiteActionPerformed
        // TODO add your handling code here:
        int selectedRow = TableauVisite.getSelectedRow();
        if(selectedRow == -1) {
            return;
        }
        DefaultTableModel model = (DefaultTableModel) TableauVisite.getModel();
        try {
            String codeMedVisite = (String) model.getValueAt(selectedRow, 0);
            String codePatVisite = (String) model.getValueAt(selectedRow, 1);
            
            VisiteManager visiteManager = new VisiteManager();
            visiteManager.supprimeVisite(codeMedVisite, codePatVisite);
            
            JOptionPane.showMessageDialog(null, "Suppression r√©ussit");
            tableauVisite();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnSupprimeVisiteActionPerformed

    /**********************Tableau m√©decin***********************/
    public void tableauMedecin() {
        MedecinManager medecinManager = new MedecinManager();

        DefaultTableModel model = (DefaultTableModel) TableauMedecin.getModel();
        List<Medecin> medecins = medecinManager.getAllMedecin();
        model.setRowCount(0);

        if (medecins != null) {
            for(Medecin medecin : medecins) {
                Object[] rowData = {
                    medecin.getCodeMed(),
                    medecin.getNom(),
                    medecin.getPrenom(),
                    medecin.getGrade()
                };
                model.addRow(rowData);
            }
        }
    }
    /**********************fin tableau***********************/
    
    /**********************Tableau patient***********************/
    public void tableauPatient() {
        PatientManager patientManager = new PatientManager();
        
        DefaultTableModel model = (DefaultTableModel) TableauPatient.getModel();
        List<Patient> patients = patientManager.getAllPatient();
        model.setRowCount(0);
        
        if(patients != null) {
            for(Patient patient: patients) {
                Object[] rowData = {
                    patient.getCodePat(),
                    patient.getNomPat(),
                    patient.getPrenomPat(),
                    patient.getSexe(),
                    patient.getAdresse()
                };
                model.addRow(rowData);
            }
        }
    }
    /**********************fin tableau***********************/
    
    /**********************Tableau Visite***********************/
    public void tableauVisite() {
        VisiteManager visiteManager = new VisiteManager();
        DefaultTableModel model = (DefaultTableModel) TableauVisite.getModel();
        List<Visite> visites = visiteManager.getAllVisite();
        model.setRowCount(0);
        
        if(visites != null) {
            for(Visite visite: visites) {
                Object[] rowData = {
                    visite.getCodeMedVisite(),
                    visite.getCodePatVisite(),
                    visite.getDateVisite()
                };
                model.addRow(rowData);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IFacePatient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ChampAdressePatient;
    private javax.swing.JTextField ChampCodeMedVisite;
    private javax.swing.JTextField ChampCodeMedecin;
    private javax.swing.JTextField ChampCodePatVisite;
    private javax.swing.JTextField ChampCodePatient;
    private com.toedter.calendar.JDateChooser ChampDateVisite;
    private javax.swing.JTextField ChampGradeMedecin;
    private javax.swing.JTextField ChampNomMedecin;
    private javax.swing.JTextField ChampNomPatient;
    private javax.swing.JTextField ChampPrenomMedecin;
    private javax.swing.JTextField ChampPrenomPatient;
    private javax.swing.JTextField ChampRecherchePatient;
    private javax.swing.JComboBox<String> ListeSexePatient;
    private javax.swing.JPanel PanelMedecin;
    private javax.swing.JPanel PanelPatient;
    private javax.swing.JPanel PanelVisite;
    private javax.swing.JTable TableauMedecin;
    private javax.swing.JTable TableauPatient;
    private javax.swing.JTable TableauVisite;
    private javax.swing.JButton btnAjoutMedecin;
    private javax.swing.JButton btnAjoutPatient;
    private javax.swing.JButton btnAjoutVisite;
    private javax.swing.JButton btnModifieMedecin;
    private javax.swing.JButton btnModifiePatient;
    private javax.swing.JButton btnModifieVisite;
    private javax.swing.JButton btnSupprimeMedecin;
    private javax.swing.JButton btnSupprimePatient;
    private javax.swing.JButton btnSupprimeVisite;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelAdressePatient;
    private javax.swing.JLabel labelCodeMedVisite;
    private javax.swing.JLabel labelCodeMedecin;
    private javax.swing.JLabel labelCodePatVisite;
    private javax.swing.JLabel labelCodePatient;
    private javax.swing.JLabel labelDateDeVisite;
    private javax.swing.JLabel labelGradeMedecin;
    private javax.swing.JLabel labelNomMedecin;
    private javax.swing.JLabel labelNomPatient;
    private javax.swing.JLabel labelPrenomMedecin;
    private javax.swing.JLabel labelPrenomPatient;
    private javax.swing.JLabel labelSexePatient;
    // End of variables declaration//GEN-END:variables
}
